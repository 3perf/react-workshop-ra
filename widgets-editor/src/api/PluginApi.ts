import Api from "api/Api";
import { AxiosPromise } from "axios";
import { GenericApiResponse } from "api/ApiResponses";

export interface Plugin {
  id: string;
  name: string;
  type: "API" | "DB";
  packageName: string;
  iconLocation?: string;
  uiComponent: "ApiEditorForm" | "RapidApiEditorForm" | "DbEditorForm";
  datasourceComponent: "RestAPIDatasourceForm" | "AutoForm";
  allowUserDatasources?: boolean;
  templates: Record<string, string>;
  responseType?: "TABLE" | "JSON";
  documentationLink?: string;
}

export interface PluginFormPayload {
  form: any[];
  editor: any[];
  setting: any[];
}

class PluginsApi extends Api {
  static url = "v1/plugins";
  static fetchPlugins(
    orgId: string,
  ): AxiosPromise<GenericApiResponse<Plugin[]>> {
    return Promise.resolve({
      status: 200,
      statusText: "OK",
      headers: { "Content-Type": "application/json" },
      config: {},
      "responseMeta":{"status":200,"success":true},"data":[{"id":"60916df3f41c6d1ea7e23d0e","userPermissions":[],"name":"PostgreSQL","type":"DB","packageName":"postgres-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/Postgress.png","documentationLink":"https://docs.appsmith.com/v/v1.2.1/datasource-reference/querying-postgres","responseType":"TABLE","uiComponent":"DbEditorForm","datasourceComponent":"AutoForm","defaultInstall":true,"allowUserDatasources":true,"templates":{"CREATE":"INSERT INTO users\n  (name, gender, email)\nVALUES\n  (\n    '{{ nameInput.text }}',\n    '{{ genderDropdown.selectedOptionValue }}',\n    '{{ nameInput.text }}'\n  ); -- nameInput and genderDropdown are example widgets, replace them with your widget names. Read more at http://bit.ly/capture-widget-data\n","SELECT":"SELECT * FROM users where role = 'Admin' ORDER BY id LIMIT 10; -- Use widget data in a query using {{ widgetName.property }}. Read more at http://bit.ly/capture-widget-data","UPDATE":"UPDATE users\n  SET status = 'APPROVED'\n  WHERE id = '{{ usersTable.selectedRow.id }}'; -- usersTable is an example table widget from where the id is being read. Replace it with your own Table widget or a static value. Read more at http://bit.ly/capture-widget-data\n\n","DELETE":"DELETE FROM users WHERE id = -1; -- Use widget data in a query by replacing static values with {{ widgetName.property }}. Read more at http://bit.ly/capture-widget-data\n"},"new":false},{"id":"60916df3f41c6d1ea7e23d0f","userPermissions":[],"name":"REST API","type":"API","packageName":"restapi-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/RestAPI.png","uiComponent":"ApiEditorForm","datasourceComponent":"RestAPIDatasourceForm","defaultInstall":true,"allowUserDatasources":true,"templates":{},"new":false},{"id":"60916df3f41c6d1ea7e23d10","userPermissions":[],"name":"MongoDB","type":"DB","packageName":"mongo-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/MongoDB.png","documentationLink":"https://docs.appsmith.com/v/v1.2.1/datasource-reference/querying-mongodb","responseType":"JSON","uiComponent":"DbEditorForm","datasourceComponent":"AutoForm","defaultInstall":true,"allowUserDatasources":true,"templates":{"CREATE":"{\n  \"insert\": \"users\",\n  \"documents\": [\n    {\n      \"name\": \"{{ nameInput.text }}\",\n      \"email\": \"{{ emailInput.text }}\",\n      \"gender\": \"{{ genderDropdown.selectedOptionValue }}\"\n    }\n  ]\n}\n","READ":"{\n  \"find\": \"users\",\n  \"filter\": {\n    \"status\": \"{{ statusDropdown.selectedOptionValue }}\"\n  },\n  \"sort\": {\n    \"id\": 1\n  },\n  \"limit\": 10\n}","UPDATE":"{\n  \"update\": \"users\",\n  \"updates\": [\n    {\n      \"q\": {\n        \"id\": 10\n      },\n      \"u\": { \"$set\": { \"status\": \"{{ statusDropdown.selectedOptionValue }}\" } }\n    }\n  ]\n}\n","DELETE":"{\n  \"delete\": \"users\",\n  \"deletes\": [\n    {\n      \"q\": {\n        \"id\": \"{{ usersTable.selectedRow.id }}\"\n      },\n      \"limit\": 1\n    }\n  ]\n}\n"},"new":false},{"id":"60916df3f41c6d1ea7e23d11","userPermissions":[],"name":"Rapid API Plugin","type":"API","packageName":"rapidapi-plugin","uiComponent":"RapidApiEditorForm","defaultInstall":true,"allowUserDatasources":false,"templates":{},"new":false},{"id":"60916df4f41c6d1ea7e23d23","userPermissions":[],"name":"Mysql","type":"DB","packageName":"mysql-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/Mysql.jpg","documentationLink":"https://docs.appsmith.com/v/v1.2.1/datasource-reference/querying-mysql","responseType":"TABLE","uiComponent":"DbEditorForm","datasourceComponent":"AutoForm","defaultInstall":true,"allowUserDatasources":true,"templates":{"CREATE":"INSERT INTO users\n  (name, gender, email)\nVALUES\n  (\n    '{{ nameInput.text }}',\n    '{{ genderDropdown.selectedOptionValue }}',\n    '{{ nameInput.text }}'\n  ); -- nameInput and genderDropdown are example widgets, replace them with your widget names. Read more at http://bit.ly/capture-widget-data","SELECT":"SELECT * FROM users where role = 'Admin' ORDER BY id LIMIT 10 -- Use widget data in a query using {{ widgetName.property }}. Read more at http://bit.ly/capture-widget-data\n","UPDATE":"UPDATE users\n  SET status = 'APPROVED'\n  WHERE id = '{{ usersTable.selectedRow.id }}'; -- usersTable is an example table widget from where the id is being read. Replace it with your own Table widget or a static value. Read more at http://bit.ly/capture-widget-data\n","DELETE":"DELETE FROM users WHERE id = -1; -- Use widget data in a query by replacing static values with {{ widgetName.property }}. Read more at http://bit.ly/capture-widget-data\n"},"new":false},{"id":"60916df5f41c6d1ea7e23d61","userPermissions":[],"name":"ElasticSearch","type":"DB","packageName":"elasticsearch-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/ElasticSearch.png","documentationLink":"https://docs.appsmith.com/v/v1.2.1/datasource-reference/querying-elasticsearch","responseType":"JSON","uiComponent":"DbEditorForm","datasourceComponent":"AutoForm","defaultInstall":true,"allowUserDatasources":true,"templates":{},"new":false},{"id":"60916df5f41c6d1ea7e23d63","userPermissions":[],"name":"DynamoDB","type":"DB","packageName":"dynamo-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/DynamoDB.png","documentationLink":"https://docs.appsmith.com/v/v1.2.1/datasource-reference/querying-dynamodb","responseType":"JSON","uiComponent":"DbEditorForm","datasourceComponent":"AutoForm","defaultInstall":true,"allowUserDatasources":true,"templates":{},"new":false},{"id":"60916df5f41c6d1ea7e23d66","userPermissions":[],"name":"Redis","type":"DB","packageName":"redis-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/redis.jpg","documentationLink":"https://docs.appsmith.com/v/v1.2.1/datasource-reference/querying-redis","responseType":"TABLE","uiComponent":"DbEditorForm","datasourceComponent":"AutoForm","defaultInstall":true,"allowUserDatasources":true,"templates":{},"new":false},{"id":"60916df5f41c6d1ea7e23d68","userPermissions":[],"name":"MsSQL","type":"DB","packageName":"mssql-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/MsSQL.jpg","documentationLink":"https://docs.appsmith.com/v/v1.2.1/datasource-reference/querying-mssql","responseType":"TABLE","uiComponent":"DbEditorForm","datasourceComponent":"AutoForm","defaultInstall":true,"allowUserDatasources":true,"templates":{"CREATE":"INSERT INTO users\n  (name, gender, email)\nVALUES\n  (\n    '{{ nameInput.text }}',\n    '{{ genderDropdown.selectedOptionValue }}',\n    '{{ nameInput.text }}'\n  );\n","SELECT":"SELECT * FROM users where role = '{{ roleDropdown.selectedOptionValue }}' ORDER BY id LIMIT 10;","UPDATE":"UPDATE users\n  SET status = 'APPROVED'\n  WHERE id = '{{ usersTable.selectedRow.id }}';\n","DELETE":"DELETE FROM users WHERE id = '{{ usersTable.selectedRow.id }}';\n"},"new":false},{"id":"60916df5f41c6d1ea7e23d70","userPermissions":[],"name":"Firestore","type":"DB","packageName":"firestore-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/Firestore.png","documentationLink":"https://docs.appsmith.com/v/v1.2.1/datasource-reference/querying-firestore","responseType":"JSON","uiComponent":"DbEditorForm","datasourceComponent":"AutoForm","defaultInstall":true,"allowUserDatasources":true,"templates":{},"new":false},{"id":"60916df5f41c6d1ea7e23d76","userPermissions":[],"name":"Redshift","type":"DB","packageName":"redshift-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/Redshift.png","documentationLink":"https://docs.appsmith.com/v/v1.2.1/datasource-reference/querying-redshift","responseType":"TABLE","uiComponent":"DbEditorForm","datasourceComponent":"AutoForm","defaultInstall":true,"allowUserDatasources":true,"templates":{},"new":false},{"id":"60916df5f41c6d1ea7e23d7a","userPermissions":[],"name":"S3","type":"DB","packageName":"amazons3-plugin","iconLocation":"https://s3.us-east-2.amazonaws.com/assets.appsmith.com/AmazonS3.jpeg","documentationLink":"https://docs.appsmith.com/datasource-reference/querying-amazon-s3","responseType":"JSON","uiComponent":"DbEditorForm","datasourceComponent":"AutoForm","defaultInstall":true,"allowUserDatasources":true,"templates":{},"new":false}]
    }) as any;
  }

  static fetchFormConfig(
    id: string,
  ): AxiosPromise<GenericApiResponse<PluginFormPayload>> {
    return Promise.resolve({
      status: 200,
      statusText: "OK",
      headers: { "Content-Type": "application/json" },
      config: {},
      "responseMeta":{"status":200,"success":true},"data":{"form":[{"sectionName":"General","children":[{"label":"URL","configProperty":"datasourceConfiguration.url","controlType":"INPUT_TEXT","isRequired":true,"placeholderText":"https://example.com"},{"label":"Headers","configProperty":"datasourceConfiguration.headers","controlType":"KEY_VAL_INPUT"},{"label":"Send Authentication Information Key (Do not edit)","configProperty":"datasourceConfiguration.properties[0].key","controlType":"INPUT_TEXT","hidden":true,"initialValue":"isSendSessionEnabled"},{"label":"Send Appsmith signature header (X-APPSMITH-SIGNATURE)","configProperty":"datasourceConfiguration.properties[0].value","controlType":"DROP_DOWN","isRequired":true,"initialValue":"N","options":[{"label":"Yes","value":"Y"},{"label":"No","value":"N"}]},{"label":"Session Details Signature Key Key (Do not edit)","configProperty":"datasourceConfiguration.properties[1].key","controlType":"INPUT_TEXT","hidden":true,"initialValue":"sessionSignatureKey"},{"label":"Session Details Signature Key","configProperty":"datasourceConfiguration.properties[1].value","controlType":"INPUT_TEXT","hidden":{"path":"datasourceConfiguration.properties[0].value","comparison":"EQUALS","value":"N"}},{"label":"Authentication Type","configProperty":"datasourceConfiguration.authentication.authenticationType","controlType":"DROP_DOWN","options":[{"label":"None","value":"dbAuth"},{"label":"OAuth2 (Client credentials)","value":"oAuth2"}]},{"label":"Grant Type","configProperty":"datasourceConfiguration.authentication.grantType","controlType":"INPUT_TEXT","isRequired":false,"hidden":true},{"label":"Access Token URL","configProperty":"datasourceConfiguration.authentication.accessTokenUrl","controlType":"INPUT_TEXT","isRequired":false,"hidden":{"path":"datasourceConfiguration.authentication.authenticationType","comparison":"NOT_EQUALS","value":"oAuth2"}},{"label":"Client Id","configProperty":"datasourceConfiguration.authentication.clientId","controlType":"INPUT_TEXT","isRequired":false,"hidden":{"path":"datasourceConfiguration.authentication.authenticationType","comparison":"NOT_EQUALS","value":"oAuth2"}},{"label":"Client Secret","configProperty":"datasourceConfiguration.authentication.clientSecret","dataType":"PASSWORD","controlType":"INPUT_TEXT","isRequired":false,"hidden":{"path":"datasourceConfiguration.authentication.authenticationType","comparison":"NOT_EQUALS","value":"oAuth2"}},{"label":"Scope(s)","configProperty":"datasourceConfiguration.authentication.scopeString","controlType":"INPUT_TEXT","isRequired":false,"hidden":{"path":"datasourceConfiguration.authentication.authenticationType","comparison":"NOT_EQUALS","value":"oAuth2"}},{"label":"Header Prefix","configProperty":"datasourceConfiguration.authentication.headerPrefix","controlType":"INPUT_TEXT","placeholderText":"Bearer (default)","isRequired":false,"hidden":{"path":"datasourceConfiguration.authentication.authenticationType","comparison":"NOT_EQUALS","value":"oAuth2"}},{"label":"Add token to","configProperty":"datasourceConfiguration.authentication.isTokenHeader","controlType":"DROP_DOWN","isRequired":false,"hidden":{"path":"datasourceConfiguration.authentication.authenticationType","comparison":"NOT_EQUALS","value":"oAuth2"},"options":[{"label":"Header","value":true},{"label":"Query parameters","value":false}]}]}]}
    }) as any;
  }
}

export default PluginsApi;
